name: Rust MSVC and MUSL Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 Rust 环境
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable-x86_64-pc-windows-msvc
          override: true

      # 安装必要的构建工具
      - name: Install MSVC Build Tools
        run: |
          choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --includeOptional"

      # 设置环境变量
      - name: Set WINDIVERT_PATH
        run: echo "WINDIVERT_PATH=${{ github.workspace }}\lib\windivert\x64" >> $env:GITHUB_ENV

      - name: Append to LIB environment variable
        run: echo "LIB=%LIB%;${{ github.workspace }}\lib\WpdPack\x64" >> $env:GITHUB_ENV

      # 构建项目
      - name: Build with Cargo
        run: cargo build --release --target=x86_64-pc-windows-msvc

      # 上传构建结果
      - name: Upload Windows Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: target/x86_64-pc-windows-msvc/release/IPv6PrefixFilter.exe

  build-linux:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 Rust 环境
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # 安装 MUSL 工具链
      - name: Install MUSL Target
        run: rustup target add x86_64-unknown-linux-musl

      # 安装必要的依赖
      - name: Install MUSL Tools
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      # 构建项目
      - name: Build with Cargo
        run: cargo build --release --target x86_64-unknown-linux-musl

      # 列出生成的文件
      # - name: List build directory
      #   run: ls -R target/x86_64-unknown-linux-musl/release/

      # 上传构建结果
      - name: Upload Linux Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: target/x86_64-unknown-linux-musl/release/IPv6PrefixFilter
